{"ast":null,"code":"var _jsxFileName = \"/Users/lennartvandersmissen/Documents/masshealth-assessment/assessment-frontend/src/Assessment.js\",\n  _s = $RefreshSig$();\n// src/Assessment.js\nimport React, { useState, useEffect } from 'react';\nimport Question from './Question';\nimport Outcome from './Outcome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Assessment() {\n  _s();\n  const [step, setStep] = useState(1);\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [submissionStatus, setSubmissionStatus] = useState(null); // null, 'success', 'error'\n\n  // Define questions\n  const questions = [\n  // Initial Question\n  {\n    key: 'testOrReal',\n    question: 'Is this assessment for testing purposes or a real inquiry?',\n    options: ['Test', 'Real'],\n    type: 'options'\n  },\n  // Existing Questions...\n  {\n    key: 'residency',\n    question: 'Do you currently reside in Massachusetts?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  }, {\n    key: 'age',\n    question: 'What is your age group?',\n    options: ['Under 18', '18-21', '21-64', '65 or older'],\n    type: 'options'\n  }, {\n    key: 'householdSize',\n    question: 'How many people are in your household?',\n    options: ['1', '2', '3', '4', '5', '6', '7', '8+'],\n    type: 'options'\n  }, {\n    key: 'householdIncome',\n    question: 'What is your total annual household income (before taxes)?',\n    options: ['Less than $15,000', '$15,000 - $20,000', '$20,001 - $25,000', '$25,001 - $30,000', '$30,001 - $35,000', '$35,001 - $40,000', '$40,001 - $45,000', '$45,001 - $50,000', '$50,001 - $55,000', '$55,001 - $60,000', 'Over $60,000'],\n    type: 'options'\n  }, {\n    key: 'assets',\n    question: 'What is the total value of your countable assets?',\n    options: ['Less than $2,000', '$2,001 - $5,000', '$5,001 - $10,000', 'Over $10,000'],\n    type: 'options'\n  }, {\n    key: 'medicareEnrolled',\n    question: 'Are you enrolled in Medicare?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  }, {\n    key: 'disability',\n    question: 'Do you have a disability?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  }, {\n    key: 'esrd',\n    question: 'Do you have end-stage renal disease (ESRD)?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  }, {\n    key: 'abiOrTbi',\n    question: 'Do you have an acquired brain injury (ABI) or traumatic brain injury (TBI)?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  }, {\n    key: 'nursingFacility',\n    question: 'Are you currently residing in a nursing facility or hospital, or have you been in one for at least 90 consecutive days?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  }, {\n    key: 'nursingCareCriteria',\n    question: 'Do you meet the criteria for needing nursing facility level of care?',\n    options: ['Yes', 'No'],\n    type: 'options',\n    explanation: `This question asks whether you require the level of care typically provided in a nursing facility due to medical, functional, or cognitive impairments. \nMeeting the criteria generally means you have significant health-related needs that cannot be met through informal supports or standard home care services.\n**Key factors include:**\n- **Assistance with Activities of Daily Living (ADLs):** Such as bathing, dressing, eating, toileting, transferring, and continence.\n- **Medical and Nursing Needs:** Requiring regular medical treatments or interventions provided by licensed nurses.\n- **Cognitive Impairments:** Memory loss, disorientation, or impaired judgment due to conditions like dementia.\n- **Behavioral Issues:** Behaviors that pose a risk to yourself or others.\nIf you're unsure, consider consulting a healthcare professional for an assessment.`\n  }, {\n    key: 'intellectualDisability',\n    question: 'Do you have an intellectual disability diagnosed by the Department of Developmental Services (DDS)?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  }, {\n    key: 'communitySupportNeeded',\n    question: 'Do you require assistance with daily activities to live in the community (e.g., personal care, homemaker services)?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  }, {\n    key: 'transitioningFromInstitutionalCare',\n    question: 'Are you planning to transition from a nursing facility or hospital back into the community?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  }, {\n    key: 'coordinatedCareNeeded',\n    question: 'Would you benefit from coordinated health care services, including medical, behavioral health, and long-term services and supports?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  }];\n\n  // Helper Functions\n  const getFPL = householdSize => {\n    // 2023 FPL values\n    const fplValues = {\n      1: 14580,\n      2: 19720,\n      3: 24860,\n      4: 30000,\n      5: 35140,\n      6: 40280,\n      7: 45420,\n      8: 50560\n    };\n    const additionalPerson = 5120;\n    if (householdSize <= 8) {\n      return fplValues[householdSize];\n    } else {\n      return fplValues[8] + (householdSize - 8) * additionalPerson;\n    }\n  };\n  const mapIncome = incomeOption => {\n    const incomeRanges = {\n      'Less than $15,000': 15000,\n      '$15,000 - $20,000': 20000,\n      '$20,001 - $25,000': 25000,\n      '$25,001 - $30,000': 30000,\n      '$30,001 - $35,000': 35000,\n      '$35,001 - $40,000': 40000,\n      '$40,001 - $45,000': 45000,\n      '$45,001 - $50,000': 50000,\n      '$50,001 - $55,000': 55000,\n      '$55,001 - $60,000': 60000,\n      'Over $60,000': 60001\n    };\n    return incomeRanges[incomeOption] || 0;\n  };\n  const mapAssets = assetsOption => {\n    const assetsRanges = {\n      'Less than $2,000': 2000,\n      '$2,001 - $5,000': 5000,\n      '$5,001 - $10,000': 10000,\n      'Over $10,000': 10001\n    };\n    return assetsRanges[assetsOption] || 0;\n  };\n  const determineIncomeEligibility = () => {\n    const {\n      householdSize,\n      householdIncome,\n      age\n    } = answers;\n    let size = householdSize === '8+' ? 8 : parseInt(householdSize, 10);\n    let income = mapIncome(householdIncome);\n    if (isNaN(size) || isNaN(income) || size <= 0 || income < 0) {\n      return false;\n    }\n    const fpl = getFPL(size);\n    let incomeLimits = {};\n\n    // Determine income limits based on age\n    if (age === 'Under 18') {\n      incomeLimits = {\n        'MassHealth Standard (Children 1-18)': fpl * 1.5 // 150% FPL\n      };\n    } else if (age === '18-21' || age === '21-64' || age === '65 or older') {\n      incomeLimits = {\n        'MassHealth Standard (Adults)': fpl * 1.33,\n        // 133% FPL\n        'One Care Program': fpl * 1.33,\n        // 133% FPL\n        'Integrated Care Options (ICO)': fpl * 1.33,\n        // 133% FPL\n        'Senior Care Options (SCO)': fpl * 1.00 // 100% FPL\n      };\n    }\n    return {\n      incomeEligible: incomeLimits,\n      income\n    };\n  };\n  const determineAssetEligibility = () => {\n    const {\n      assets,\n      age\n    } = answers;\n    let assetValue = mapAssets(assets);\n    if (isNaN(assetValue) || assetValue < 0) {\n      return false;\n    }\n    let assetLimits = {};\n    assetLimits = {\n      'MassHealth Standard (Adults)': age === '65 or older' ? 2000 : Infinity,\n      'Senior Care Options (SCO)': 2000,\n      'Frail Elder Waiver (FEW)': 2000,\n      'ABI and MFP Waivers': 2000,\n      'Traumatic Brain Injury (TBI) Waiver': 2000,\n      'Adult Supports Waiver (DDS-AS)': 2000\n    };\n    return {\n      assetEligible: assetLimits,\n      assetValue\n    };\n  };\n  const determineEligibility = () => {\n    const {\n      residency,\n      age,\n      medicareEnrolled,\n      esrd,\n      disability,\n      abiOrTbi,\n      nursingFacility,\n      nursingCareCriteria,\n      intellectualDisability,\n      communitySupportNeeded,\n      transitioningFromInstitutionalCare,\n      coordinatedCareNeeded\n    } = answers;\n    let eligiblePrograms = [];\n\n    // Residency check\n    if (residency !== 'Yes') {\n      return ['Ineligible for all listed MassHealth programs and waivers.'];\n    }\n\n    // Income eligibility check\n    const incomeCheck = determineIncomeEligibility();\n    if (!incomeCheck || !incomeCheck.incomeEligible) {\n      return ['Unable to determine income eligibility due to invalid inputs.'];\n    }\n    const {\n      incomeEligible,\n      income\n    } = incomeCheck;\n\n    // Asset eligibility check\n    const assetCheck = determineAssetEligibility();\n    if (!assetCheck || !assetCheck.assetEligible) {\n      return ['Unable to determine asset eligibility due to invalid inputs.'];\n    }\n    const {\n      assetEligible,\n      assetValue\n    } = assetCheck;\n\n    // MassHealth Standard (Adults)\n    if ((age === '18-21' || age === '21-64' || age === '65 or older') && income <= incomeEligible['MassHealth Standard (Adults)'] && assetValue <= assetEligible['MassHealth Standard (Adults)']) {\n      eligiblePrograms.push('MassHealth Standard (Adults)');\n    }\n\n    // Children MassHealth Standard\n    if (age === 'Under 18' && income <= incomeEligible['MassHealth Standard (Children 1-18)']) {\n      eligiblePrograms.push('MassHealth Standard (Children 1-18)');\n    }\n\n    // Senior Care Options (SCO)\n    if (age === '65 or older' && medicareEnrolled === 'Yes' && income <= incomeEligible['Senior Care Options (SCO)'] && assetValue <= assetEligible['Senior Care Options (SCO)']) {\n      eligiblePrograms.push('Senior Care Options (SCO)');\n    }\n\n    // One Care Program and ICO\n    if ((age === '18-21' || age === '21-64') && medicareEnrolled === 'Yes' && esrd === 'No' && income <= incomeEligible['One Care Program']) {\n      eligiblePrograms.push('One Care Program');\n      eligiblePrograms.push('Integrated Care Options (ICO)');\n    }\n\n    // Frail Elder Waiver (FEW)\n    if ((age === '60+' || age === '65 or older') && nursingCareCriteria === 'Yes' && assetValue <= assetEligible['Frail Elder Waiver (FEW)'] && income <= 32904 // 300% FBR\n    ) {\n      eligiblePrograms.push('Frail Elder Waiver (FEW)');\n    }\n\n    // ABI and MFP Waivers\n    if (abiOrTbi === 'Yes' && nursingFacility === 'Yes' && assetValue <= assetEligible['ABI and MFP Waivers'] && income <= 32904 // 300% FBR\n    ) {\n      eligiblePrograms.push('ABI Residential Habilitation (ABI-RH)');\n      eligiblePrograms.push('ABI Non-Residential Habilitation (ABI-N)');\n      eligiblePrograms.push('MFP Residential Supports (MFP-RS)');\n      eligiblePrograms.push('MFP Community Living (MFP-CL)');\n    }\n\n    // Traumatic Brain Injury (TBI) Waiver\n    if (abiOrTbi === 'Yes' && nursingCareCriteria === 'Yes' && assetValue <= assetEligible['Traumatic Brain Injury (TBI) Waiver'] && income <= 32904 // 300% FBR\n    ) {\n      eligiblePrograms.push('Traumatic Brain Injury (TBI) Waiver');\n    }\n\n    // Adult Supports Waiver (DDS-AS)\n    if (intellectualDisability === 'Yes' && (age === '22 or older' || age === '65 or older') && assetValue <= assetEligible['Adult Supports Waiver (DDS-AS)'] && income <= 32904 // 300% FBR\n    ) {\n      eligiblePrograms.push('Adult Supports Waiver (DDS-AS)');\n    }\n\n    // Need for community support\n    if (communitySupportNeeded === 'Yes') {\n      if ((age === '60+' || age === '65 or older') && assetValue <= assetEligible['Frail Elder Waiver (FEW)'] && income <= 32904 // 300% FBR\n      ) {\n        eligiblePrograms.push('Frail Elder Waiver (FEW)');\n      }\n      if (transitioningFromInstitutionalCare === 'Yes') {\n        eligiblePrograms.push('MFP Community Living (MFP-CL)');\n      }\n    }\n\n    // Transitioning from Institutional Care\n    if (transitioningFromInstitutionalCare === 'Yes') {\n      eligiblePrograms.push('MFP Residential Supports (MFP-RS)');\n      eligiblePrograms.push('MFP Community Living (MFP-CL)');\n    }\n\n    // Coordinated Care Needs\n    if (coordinatedCareNeeded === 'Yes') {\n      if ((age === '18-21' || age === '21-64') && medicareEnrolled === 'Yes' && esrd === 'No' && income <= incomeEligible['One Care Program']) {\n        eligiblePrograms.push('Integrated Care Options (ICO)');\n        eligiblePrograms.push('One Care Program');\n      }\n      if (age === '65 or older' && medicareEnrolled === 'Yes') {\n        eligiblePrograms.push('Senior Care Options (SCO)');\n      }\n    }\n\n    // Remove duplicates\n    eligiblePrograms = [...new Set(eligiblePrograms)];\n    if (eligiblePrograms.length === 0) {\n      eligiblePrograms.push('Based on your answers, you may need to contact MassHealth for more information.');\n    }\n    return eligiblePrograms;\n  };\n\n  // Function to submit the assessment to the backend\n  const submitAssessment = async () => {\n    console.log('Submitting assessment with answers:', answers); // Debugging log\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/inquiries`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(answers)\n      });\n      if (response.ok) {\n        setSubmissionStatus('success');\n        console.log('Assessment submitted successfully.');\n      } else {\n        const errorData = await response.json();\n        setSubmissionStatus('error');\n        console.error('Failed to submit assessment:', errorData.message);\n      }\n    } catch (error) {\n      setSubmissionStatus('error');\n      console.error('Error submitting assessment:', error);\n    }\n  };\n\n  // useEffect to handle submission when assessment is complete\n  useEffect(() => {\n    if (step > questions.length && !submitted) {\n      console.log('All questions answered. Submitting assessment...'); // Debugging log\n      submitAssessment();\n      setSubmitted(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [step]);\n\n  // Determine eligibility only after submission\n  const eligiblePrograms = step > questions.length ? determineEligibility() : [];\n  if (step > questions.length) {\n    return /*#__PURE__*/_jsxDEV(Outcome, {\n      programs: eligiblePrograms,\n      submissionStatus: submissionStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[step - 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assessment-container\",\n    children: [/*#__PURE__*/_jsxDEV(Question, {\n      question: currentQuestion.question,\n      options: currentQuestion.options,\n      onAnswer: value => handleAnswer(currentQuestion.key, value),\n      type: currentQuestion.type,\n      explanation: currentQuestion.explanation // Pass the explanation prop here\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this), submissionStatus === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submission-success\",\n      children: \"Your assessment has been submitted successfully.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this), submissionStatus === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submission-error\",\n      children: \"There was an error submitting your assessment. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 460,\n    columnNumber: 5\n  }, this);\n}\n_s(Assessment, \"JNRcF+K9OMSZYNVBa265SPPlnpQ=\");\n_c = Assessment;\nexport default Assessment;\nvar _c;\n$RefreshReg$(_c, \"Assessment\");","map":{"version":3,"names":["React","useState","useEffect","Question","Outcome","jsxDEV","_jsxDEV","Assessment","_s","step","setStep","answers","setAnswers","submitted","setSubmitted","submissionStatus","setSubmissionStatus","questions","key","question","options","type","explanation","getFPL","householdSize","fplValues","additionalPerson","mapIncome","incomeOption","incomeRanges","mapAssets","assetsOption","assetsRanges","determineIncomeEligibility","householdIncome","age","size","parseInt","income","isNaN","fpl","incomeLimits","incomeEligible","determineAssetEligibility","assets","assetValue","assetLimits","Infinity","assetEligible","determineEligibility","residency","medicareEnrolled","esrd","disability","abiOrTbi","nursingFacility","nursingCareCriteria","intellectualDisability","communitySupportNeeded","transitioningFromInstitutionalCare","coordinatedCareNeeded","eligiblePrograms","incomeCheck","assetCheck","push","Set","length","submitAssessment","console","log","response","fetch","process","env","REACT_APP_BACKEND_URL","method","headers","body","JSON","stringify","ok","errorData","json","error","message","programs","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","className","children","onAnswer","value","handleAnswer","_c","$RefreshReg$"],"sources":["/Users/lennartvandersmissen/Documents/masshealth-assessment/assessment-frontend/src/Assessment.js"],"sourcesContent":["// src/Assessment.js\nimport React, { useState, useEffect } from 'react';\nimport Question from './Question';\nimport Outcome from './Outcome';\n\nfunction Assessment() {\n  const [step, setStep] = useState(1);\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [submissionStatus, setSubmissionStatus] = useState(null); // null, 'success', 'error'\n\n  // Define questions\n  const questions = [\n    // Initial Question\n    {\n      key: 'testOrReal',\n      question: 'Is this assessment for testing purposes or a real inquiry?',\n      options: ['Test', 'Real'],\n      type: 'options',\n    },\n    // Existing Questions...\n    {\n      key: 'residency',\n      question: 'Do you currently reside in Massachusetts?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    {\n      key: 'age',\n      question: 'What is your age group?',\n      options: ['Under 18', '18-21', '21-64', '65 or older'],\n      type: 'options',\n    },\n    {\n      key: 'householdSize',\n      question: 'How many people are in your household?',\n      options: ['1', '2', '3', '4', '5', '6', '7', '8+'],\n      type: 'options',\n    },\n    {\n      key: 'householdIncome',\n      question: 'What is your total annual household income (before taxes)?',\n      options: [\n        'Less than $15,000',\n        '$15,000 - $20,000',\n        '$20,001 - $25,000',\n        '$25,001 - $30,000',\n        '$30,001 - $35,000',\n        '$35,001 - $40,000',\n        '$40,001 - $45,000',\n        '$45,001 - $50,000',\n        '$50,001 - $55,000',\n        '$55,001 - $60,000',\n        'Over $60,000',\n      ],\n      type: 'options',\n    },\n    {\n      key: 'assets',\n      question: 'What is the total value of your countable assets?',\n      options: [\n        'Less than $2,000',\n        '$2,001 - $5,000',\n        '$5,001 - $10,000',\n        'Over $10,000',\n      ],\n      type: 'options',\n    },\n    {\n      key: 'medicareEnrolled',\n      question: 'Are you enrolled in Medicare?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    {\n      key: 'disability',\n      question: 'Do you have a disability?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    {\n      key: 'esrd',\n      question: 'Do you have end-stage renal disease (ESRD)?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    {\n      key: 'abiOrTbi',\n      question:\n        'Do you have an acquired brain injury (ABI) or traumatic brain injury (TBI)?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    {\n      key: 'nursingFacility',\n      question:\n        'Are you currently residing in a nursing facility or hospital, or have you been in one for at least 90 consecutive days?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    {\n      key: 'nursingCareCriteria',\n      question:\n        'Do you meet the criteria for needing nursing facility level of care?',\n      options: ['Yes', 'No'],\n      type: 'options',\n      explanation: `This question asks whether you require the level of care typically provided in a nursing facility due to medical, functional, or cognitive impairments. \nMeeting the criteria generally means you have significant health-related needs that cannot be met through informal supports or standard home care services.\n**Key factors include:**\n- **Assistance with Activities of Daily Living (ADLs):** Such as bathing, dressing, eating, toileting, transferring, and continence.\n- **Medical and Nursing Needs:** Requiring regular medical treatments or interventions provided by licensed nurses.\n- **Cognitive Impairments:** Memory loss, disorientation, or impaired judgment due to conditions like dementia.\n- **Behavioral Issues:** Behaviors that pose a risk to yourself or others.\nIf you're unsure, consider consulting a healthcare professional for an assessment.`,\n    },\n    {\n      key: 'intellectualDisability',\n      question:\n        'Do you have an intellectual disability diagnosed by the Department of Developmental Services (DDS)?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    {\n      key: 'communitySupportNeeded',\n      question:\n        'Do you require assistance with daily activities to live in the community (e.g., personal care, homemaker services)?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    {\n      key: 'transitioningFromInstitutionalCare',\n      question:\n        'Are you planning to transition from a nursing facility or hospital back into the community?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    {\n      key: 'coordinatedCareNeeded',\n      question:\n        'Would you benefit from coordinated health care services, including medical, behavioral health, and long-term services and supports?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n  ];\n\n  // Helper Functions\n  const getFPL = (householdSize) => {\n    // 2023 FPL values\n    const fplValues = {\n      1: 14580,\n      2: 19720,\n      3: 24860,\n      4: 30000,\n      5: 35140,\n      6: 40280,\n      7: 45420,\n      8: 50560,\n    };\n    const additionalPerson = 5120;\n    if (householdSize <= 8) {\n      return fplValues[householdSize];\n    } else {\n      return fplValues[8] + (householdSize - 8) * additionalPerson;\n    }\n  };\n\n  const mapIncome = (incomeOption) => {\n    const incomeRanges = {\n      'Less than $15,000': 15000,\n      '$15,000 - $20,000': 20000,\n      '$20,001 - $25,000': 25000,\n      '$25,001 - $30,000': 30000,\n      '$30,001 - $35,000': 35000,\n      '$35,001 - $40,000': 40000,\n      '$40,001 - $45,000': 45000,\n      '$45,001 - $50,000': 50000,\n      '$50,001 - $55,000': 55000,\n      '$55,001 - $60,000': 60000,\n      'Over $60,000': 60001,\n    };\n    return incomeRanges[incomeOption] || 0;\n  };\n\n  const mapAssets = (assetsOption) => {\n    const assetsRanges = {\n      'Less than $2,000': 2000,\n      '$2,001 - $5,000': 5000,\n      '$5,001 - $10,000': 10000,\n      'Over $10,000': 10001,\n    };\n    return assetsRanges[assetsOption] || 0;\n  };\n\n  const determineIncomeEligibility = () => {\n    const { householdSize, householdIncome, age } = answers;\n\n    let size = householdSize === '8+' ? 8 : parseInt(householdSize, 10);\n    let income = mapIncome(householdIncome);\n\n    if (isNaN(size) || isNaN(income) || size <= 0 || income < 0) {\n      return false;\n    }\n\n    const fpl = getFPL(size);\n\n    let incomeLimits = {};\n\n    // Determine income limits based on age\n    if (age === 'Under 18') {\n      incomeLimits = {\n        'MassHealth Standard (Children 1-18)': fpl * 1.5, // 150% FPL\n      };\n    } else if (age === '18-21' || age === '21-64' || age === '65 or older') {\n      incomeLimits = {\n        'MassHealth Standard (Adults)': fpl * 1.33, // 133% FPL\n        'One Care Program': fpl * 1.33, // 133% FPL\n        'Integrated Care Options (ICO)': fpl * 1.33, // 133% FPL\n        'Senior Care Options (SCO)': fpl * 1.00, // 100% FPL\n      };\n    }\n\n    return { incomeEligible: incomeLimits, income };\n  };\n\n  const determineAssetEligibility = () => {\n    const { assets, age } = answers;\n\n    let assetValue = mapAssets(assets);\n\n    if (isNaN(assetValue) || assetValue < 0) {\n      return false;\n    }\n\n    let assetLimits = {};\n\n    assetLimits = {\n      'MassHealth Standard (Adults)': age === '65 or older' ? 2000 : Infinity,\n      'Senior Care Options (SCO)': 2000,\n      'Frail Elder Waiver (FEW)': 2000,\n      'ABI and MFP Waivers': 2000,\n      'Traumatic Brain Injury (TBI) Waiver': 2000,\n      'Adult Supports Waiver (DDS-AS)': 2000,\n    };\n\n    return { assetEligible: assetLimits, assetValue };\n  };\n\n  const determineEligibility = () => {\n    const {\n      residency,\n      age,\n      medicareEnrolled,\n      esrd,\n      disability,\n      abiOrTbi,\n      nursingFacility,\n      nursingCareCriteria,\n      intellectualDisability,\n      communitySupportNeeded,\n      transitioningFromInstitutionalCare,\n      coordinatedCareNeeded,\n    } = answers;\n\n    let eligiblePrograms = [];\n\n    // Residency check\n    if (residency !== 'Yes') {\n      return ['Ineligible for all listed MassHealth programs and waivers.'];\n    }\n\n    // Income eligibility check\n    const incomeCheck = determineIncomeEligibility();\n    if (!incomeCheck || !incomeCheck.incomeEligible) {\n      return ['Unable to determine income eligibility due to invalid inputs.'];\n    }\n    const { incomeEligible, income } = incomeCheck;\n\n    // Asset eligibility check\n    const assetCheck = determineAssetEligibility();\n    if (!assetCheck || !assetCheck.assetEligible) {\n      return ['Unable to determine asset eligibility due to invalid inputs.'];\n    }\n    const { assetEligible, assetValue } = assetCheck;\n\n    // MassHealth Standard (Adults)\n    if (\n      (age === '18-21' || age === '21-64' || age === '65 or older') &&\n      income <= incomeEligible['MassHealth Standard (Adults)'] &&\n      assetValue <= assetEligible['MassHealth Standard (Adults)']\n    ) {\n      eligiblePrograms.push('MassHealth Standard (Adults)');\n    }\n\n    // Children MassHealth Standard\n    if (age === 'Under 18' && income <= incomeEligible['MassHealth Standard (Children 1-18)']) {\n      eligiblePrograms.push('MassHealth Standard (Children 1-18)');\n    }\n\n    // Senior Care Options (SCO)\n    if (\n      age === '65 or older' &&\n      medicareEnrolled === 'Yes' &&\n      income <= incomeEligible['Senior Care Options (SCO)'] &&\n      assetValue <= assetEligible['Senior Care Options (SCO)']\n    ) {\n      eligiblePrograms.push('Senior Care Options (SCO)');\n    }\n\n    // One Care Program and ICO\n    if (\n      (age === '18-21' || age === '21-64') &&\n      medicareEnrolled === 'Yes' &&\n      esrd === 'No' &&\n      income <= incomeEligible['One Care Program']\n    ) {\n      eligiblePrograms.push('One Care Program');\n      eligiblePrograms.push('Integrated Care Options (ICO)');\n    }\n\n    // Frail Elder Waiver (FEW)\n    if (\n      (age === '60+' || age === '65 or older') &&\n      nursingCareCriteria === 'Yes' &&\n      assetValue <= assetEligible['Frail Elder Waiver (FEW)'] &&\n      income <= 32904 // 300% FBR\n    ) {\n      eligiblePrograms.push('Frail Elder Waiver (FEW)');\n    }\n\n    // ABI and MFP Waivers\n    if (\n      abiOrTbi === 'Yes' &&\n      nursingFacility === 'Yes' &&\n      assetValue <= assetEligible['ABI and MFP Waivers'] &&\n      income <= 32904 // 300% FBR\n    ) {\n      eligiblePrograms.push('ABI Residential Habilitation (ABI-RH)');\n      eligiblePrograms.push('ABI Non-Residential Habilitation (ABI-N)');\n      eligiblePrograms.push('MFP Residential Supports (MFP-RS)');\n      eligiblePrograms.push('MFP Community Living (MFP-CL)');\n    }\n\n    // Traumatic Brain Injury (TBI) Waiver\n    if (\n      abiOrTbi === 'Yes' &&\n      nursingCareCriteria === 'Yes' &&\n      assetValue <= assetEligible['Traumatic Brain Injury (TBI) Waiver'] &&\n      income <= 32904 // 300% FBR\n    ) {\n      eligiblePrograms.push('Traumatic Brain Injury (TBI) Waiver');\n    }\n\n    // Adult Supports Waiver (DDS-AS)\n    if (\n      intellectualDisability === 'Yes' &&\n      (age === '22 or older' || age === '65 or older') &&\n      assetValue <= assetEligible['Adult Supports Waiver (DDS-AS)'] &&\n      income <= 32904 // 300% FBR\n    ) {\n      eligiblePrograms.push('Adult Supports Waiver (DDS-AS)');\n    }\n\n    // Need for community support\n    if (communitySupportNeeded === 'Yes') {\n      if (\n        (age === '60+' || age === '65 or older') &&\n        assetValue <= assetEligible['Frail Elder Waiver (FEW)'] &&\n        income <= 32904 // 300% FBR\n      ) {\n        eligiblePrograms.push('Frail Elder Waiver (FEW)');\n      }\n      if (transitioningFromInstitutionalCare === 'Yes') {\n        eligiblePrograms.push('MFP Community Living (MFP-CL)');\n      }\n    }\n\n    // Transitioning from Institutional Care\n    if (transitioningFromInstitutionalCare === 'Yes') {\n      eligiblePrograms.push('MFP Residential Supports (MFP-RS)');\n      eligiblePrograms.push('MFP Community Living (MFP-CL)');\n    }\n\n    // Coordinated Care Needs\n    if (coordinatedCareNeeded === 'Yes') {\n      if (\n        (age === '18-21' || age === '21-64') &&\n        medicareEnrolled === 'Yes' &&\n        esrd === 'No' &&\n        income <= incomeEligible['One Care Program']\n      ) {\n        eligiblePrograms.push('Integrated Care Options (ICO)');\n        eligiblePrograms.push('One Care Program');\n      }\n      if (age === '65 or older' && medicareEnrolled === 'Yes') {\n        eligiblePrograms.push('Senior Care Options (SCO)');\n      }\n    }\n\n    // Remove duplicates\n    eligiblePrograms = [...new Set(eligiblePrograms)];\n\n    if (eligiblePrograms.length === 0) {\n      eligiblePrograms.push('Based on your answers, you may need to contact MassHealth for more information.');\n    }\n\n    return eligiblePrograms;\n  };\n\n  // Function to submit the assessment to the backend\n  const submitAssessment = async () => {\n    console.log('Submitting assessment with answers:', answers); // Debugging log\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/inquiries`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(answers),\n      });\n\n      if (response.ok) {\n        setSubmissionStatus('success');\n        console.log('Assessment submitted successfully.');\n      } else {\n        const errorData = await response.json();\n        setSubmissionStatus('error');\n        console.error('Failed to submit assessment:', errorData.message);\n      }\n    } catch (error) {\n      setSubmissionStatus('error');\n      console.error('Error submitting assessment:', error);\n    }\n  };\n\n  // useEffect to handle submission when assessment is complete\n  useEffect(() => {\n    if (step > questions.length && !submitted) {\n      console.log('All questions answered. Submitting assessment...'); // Debugging log\n      submitAssessment();\n      setSubmitted(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [step]);\n\n  // Determine eligibility only after submission\n  const eligiblePrograms = step > questions.length ? determineEligibility() : [];\n\n  if (step > questions.length) {\n    return (\n      <Outcome\n        programs={eligiblePrograms}\n        submissionStatus={submissionStatus}\n      />\n    );\n  }\n\n  const currentQuestion = questions[step - 1];\n\n  return (\n    <div className=\"assessment-container\">\n      <Question\n        question={currentQuestion.question}\n        options={currentQuestion.options}\n        onAnswer={(value) => handleAnswer(currentQuestion.key, value)}\n        type={currentQuestion.type}\n        explanation={currentQuestion.explanation} // Pass the explanation prop here\n      />\n      {submissionStatus === 'success' && (\n        <div className=\"submission-success\">\n          Your assessment has been submitted successfully.\n        </div>\n      )}\n      {submissionStatus === 'error' && (\n        <div className=\"submission-error\">\n          There was an error submitting your assessment. Please try again later.\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Assessment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}