{"ast":null,"code":"var _jsxFileName = \"/Users/lennartvandersmissen/Documents/masshealth-assessment/frontend/src/Assessment.js\",\n  _s = $RefreshSig$();\n// src/Assessment.js\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Outcome from './Outcome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Assessment() {\n  _s();\n  const [step, setStep] = useState(1);\n  const [answers, setAnswers] = useState({});\n  const handleAnswer = (questionKey, value) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionKey]: value\n    }));\n    setStep(prevStep => prevStep + 1);\n  };\n  const questions = [{\n    key: 'residency',\n    question: 'Do you currently reside in Massachusetts?',\n    options: ['Yes', 'No']\n  }, {\n    key: 'age',\n    question: 'What is your age?',\n    options: ['Under 18', '18-21', '21-64', '65 or older']\n  }, {\n    key: 'incomeEligible',\n    question: 'Do you meet the income and asset limits for MassHealth Standard based on your household size?',\n    options: ['Yes', 'No']\n  }\n  // Add other questions here following the assessment logic\n  ];\n  const determineEligibility = () => {\n    const {\n      residency,\n      age,\n      incomeEligible,\n      medicareEnrolled,\n      dualEligible,\n      esrd,\n      disability,\n      abiOrTbi,\n      nursingFacility,\n      intellectualDisability,\n      communitySupportNeeded,\n      transitioningFromInstitutionalCare\n    } = answers;\n    let eligiblePrograms = [];\n    if (residency !== 'Yes') {\n      return ['Ineligible for all listed MassHealth programs and waivers.'];\n    }\n    if (incomeEligible === 'No') {\n      return ['May not be eligible for MassHealth Standard or associated waivers.'];\n    }\n\n    // Example eligibility logic\n    if (age === 'Under 18') {\n      eligiblePrograms.push(\"MassHealth Standard (children's coverage)\");\n    }\n    if (age === '65 or older' && dualEligible === 'Yes') {\n      eligiblePrograms.push('Senior Care Options (SCO)');\n    }\n\n    // Continue adding conditions based on the assessment\n\n    if (eligiblePrograms.length === 0) {\n      eligiblePrograms.push('Based on your answers, you may need to contact MassHealth for more information.');\n    }\n    return eligiblePrograms;\n  };\n  if (step > questions.length) {\n    const eligiblePrograms = determineEligibility();\n    return /*#__PURE__*/_jsxDEV(Outcome, {\n      programs: eligiblePrograms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = questions[step - 1];\n  return /*#__PURE__*/_jsxDEV(Question, {\n    question: currentQuestion.question,\n    options: currentQuestion.options,\n    onAnswer: value => handleAnswer(currentQuestion.key, value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Assessment, \"DM9+8NpA9ZpKJgmLtmebsquAmoM=\");\n_c = Assessment;\nexport default Assessment;\nvar _c;\n$RefreshReg$(_c, \"Assessment\");","map":{"version":3,"names":["React","useState","Question","Outcome","jsxDEV","_jsxDEV","Assessment","_s","step","setStep","answers","setAnswers","handleAnswer","questionKey","value","prevAnswers","prevStep","questions","key","question","options","determineEligibility","residency","age","incomeEligible","medicareEnrolled","dualEligible","esrd","disability","abiOrTbi","nursingFacility","intellectualDisability","communitySupportNeeded","transitioningFromInstitutionalCare","eligiblePrograms","push","length","programs","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","onAnswer","_c","$RefreshReg$"],"sources":["/Users/lennartvandersmissen/Documents/masshealth-assessment/frontend/src/Assessment.js"],"sourcesContent":["// src/Assessment.js\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Outcome from './Outcome';\n\nfunction Assessment() {\n  const [step, setStep] = useState(1);\n  const [answers, setAnswers] = useState({});\n\n  const handleAnswer = (questionKey, value) => {\n    setAnswers(prevAnswers => ({ ...prevAnswers, [questionKey]: value }));\n    setStep(prevStep => prevStep + 1);\n  };\n\n  const questions = [\n    {\n      key: 'residency',\n      question: 'Do you currently reside in Massachusetts?',\n      options: ['Yes', 'No'],\n    },\n    {\n      key: 'age',\n      question: 'What is your age?',\n      options: ['Under 18', '18-21', '21-64', '65 or older'],\n    },\n    {\n      key: 'incomeEligible',\n      question: 'Do you meet the income and asset limits for MassHealth Standard based on your household size?',\n      options: ['Yes', 'No'],\n    },\n    // Add other questions here following the assessment logic\n  ];\n\n  const determineEligibility = () => {\n    const {\n      residency,\n      age,\n      incomeEligible,\n      medicareEnrolled,\n      dualEligible,\n      esrd,\n      disability,\n      abiOrTbi,\n      nursingFacility,\n      intellectualDisability,\n      communitySupportNeeded,\n      transitioningFromInstitutionalCare,\n    } = answers;\n\n    let eligiblePrograms = [];\n\n    if (residency !== 'Yes') {\n      return ['Ineligible for all listed MassHealth programs and waivers.'];\n    }\n\n    if (incomeEligible === 'No') {\n      return ['May not be eligible for MassHealth Standard or associated waivers.'];\n    }\n\n    // Example eligibility logic\n    if (age === 'Under 18') {\n      eligiblePrograms.push(\"MassHealth Standard (children's coverage)\");\n    }\n\n    if (age === '65 or older' && dualEligible === 'Yes') {\n      eligiblePrograms.push('Senior Care Options (SCO)');\n    }\n\n    // Continue adding conditions based on the assessment\n\n    if (eligiblePrograms.length === 0) {\n      eligiblePrograms.push('Based on your answers, you may need to contact MassHealth for more information.');\n    }\n\n    return eligiblePrograms;\n  };\n\n  if (step > questions.length) {\n    const eligiblePrograms = determineEligibility();\n    return <Outcome programs={eligiblePrograms} />;\n  }\n\n  const currentQuestion = questions[step - 1];\n\n  return (\n    <Question\n      question={currentQuestion.question}\n      options={currentQuestion.options}\n      onAnswer={(value) => handleAnswer(currentQuestion.key, value)}\n    />\n  );\n}\n\nexport default Assessment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}