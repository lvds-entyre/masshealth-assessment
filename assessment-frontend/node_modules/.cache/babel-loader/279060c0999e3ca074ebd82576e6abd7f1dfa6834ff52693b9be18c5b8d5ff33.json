{"ast":null,"code":"var _jsxFileName = \"/Users/lennartvandersmissen/Documents/masshealth-assessment/frontend/src/Assessment.js\",\n  _s = $RefreshSig$();\n// src/Assessment.js\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Outcome from './Outcome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Assessment() {\n  _s();\n  const [step, setStep] = useState(1);\n  const [answers, setAnswers] = useState({});\n  const handleAnswer = (questionKey, value) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionKey]: value\n    }));\n\n    // Conditional navigation logic\n    if (questionKey === 'residency' && value === 'No') {\n      setStep(questions.length + 1); // Skip to outcome\n      return;\n    }\n    if (questionKey === 'age' && value === 'Under 18') {\n      setStep(questions.length + 1); // Skip to outcome\n      return;\n    }\n    if (questionKey === 'medicareEnrolled' && value === 'No') {\n      // Skip dual eligibility question\n      setStep(prevStep => prevStep + 2);\n      return;\n    }\n    if (questionKey === 'dualEligible' && value === 'No') {\n      // Skip to disability question\n      setStep(prevStep => prevStep + 1);\n      return;\n    }\n    if (questionKey === 'disability' && value === 'No') {\n      // Skip to ESRD question\n      setStep(prevStep => prevStep + 1);\n      return;\n    }\n    if (questionKey === 'esrd' && value === 'Yes') {\n      // Skip to ABI/TBI question\n      setStep(prevStep => prevStep + 1);\n      return;\n    }\n    if (questionKey === 'abiOrTbi' && value === 'No') {\n      // Skip to intellectual disability question\n      setStep(prevStep => prevStep + 2);\n      return;\n    }\n    if (questionKey === 'nursingFacility' && value === 'No') {\n      // Skip to nursing care criteria question\n      setStep(prevStep => prevStep + 1);\n      return;\n    }\n    if (questionKey === 'intellectualDisability' && value === 'No') {\n      // Skip to community support question\n      setStep(prevStep => prevStep + 1);\n      return;\n    }\n\n    // Update the step to move to the next question\n    setStep(prevStep => prevStep + 1);\n  };\n  const questions = [\n  // Question 1\n  {\n    key: 'residency',\n    question: 'Do you currently reside in Massachusetts?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  },\n  // Question 2\n  {\n    key: 'age',\n    question: 'What is your age?',\n    options: ['Under 18', '18-21', '21-64', '65 or older'],\n    type: 'options'\n  },\n  // Question 3\n  {\n    key: 'householdSize',\n    question: 'How many people are in your household?',\n    type: 'number'\n  },\n  // Question 4\n  {\n    key: 'householdIncome',\n    question: 'What is your total annual household income (before taxes)?',\n    type: 'number'\n  },\n  // Question 5\n  {\n    key: 'medicareEnrolled',\n    question: 'Are you enrolled in Medicare?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  },\n  // Question 6\n  {\n    key: 'dualEligible',\n    question: 'Are you eligible for both MassHealth Standard and Medicare (dual-eligible)?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  },\n  // Question 7\n  {\n    key: 'disability',\n    question: 'Do you have a disability?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  },\n  // Question 8\n  {\n    key: 'esrd',\n    question: 'Do you have end-stage renal disease (ESRD)?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  },\n  // Question 9\n  {\n    key: 'abiOrTbi',\n    question: 'Do you have an acquired brain injury (ABI) or traumatic brain injury (TBI)?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  },\n  // Question 10\n  {\n    key: 'nursingFacility',\n    question: 'Are you currently residing in a nursing facility or hospital, or have you been in one for at least 90 consecutive days?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  },\n  // Question 11\n  {\n    key: 'nursingCareCriteria',\n    question: 'Do you meet the criteria for needing nursing facility level of care?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  },\n  // Question 12\n  {\n    key: 'intellectualDisability',\n    question: 'Do you have an intellectual disability diagnosed by the Department of Developmental Services (DDS)?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  },\n  // Question 13\n  {\n    key: 'communitySupportNeeded',\n    question: 'Do you require assistance with daily activities to live in the community (e.g., personal care, homemaker services)?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  },\n  // Question 14\n  {\n    key: 'transitioningFromInstitutionalCare',\n    question: 'Are you planning to transition from a nursing facility or hospital back into the community?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  },\n  // Question 15\n  {\n    key: 'coordinatedCareNeeded',\n    question: 'Would you benefit from coordinated health care services, including medical, behavioral health, and long-term services and supports?',\n    options: ['Yes', 'No'],\n    type: 'options'\n  }];\n  const determineIncomeEligibility = () => {\n    const {\n      householdSize,\n      householdIncome\n    } = answers;\n\n    // Convert inputs to numbers\n    const size = parseInt(householdSize, 10);\n    const income = parseFloat(householdIncome);\n    if (isNaN(size) || isNaN(income) || size <= 0 || income < 0) {\n      return false;\n    }\n\n    // MassHealth Standard income limits (2023 FPL percentages for illustrative purposes)\n    // Note: Replace these values with the actual income limits from MassHealth\n    const incomeLimits = {\n      1: 18175,\n      2: 24528,\n      3: 30880,\n      4: 37233,\n      5: 43585,\n      6: 49938,\n      7: 56290,\n      8: 62643\n    };\n\n    // Additional amount per person for households larger than 8\n    const additionalAmount = 6353;\n    let limit;\n    if (size <= 8) {\n      limit = incomeLimits[size];\n    } else {\n      limit = incomeLimits[8] + (size - 8) * additionalAmount;\n    }\n    return income <= limit;\n  };\n  const determineEligibility = () => {\n    const {\n      residency,\n      age,\n      medicareEnrolled,\n      dualEligible,\n      esrd,\n      disability,\n      abiOrTbi,\n      nursingFacility,\n      nursingCareCriteria,\n      intellectualDisability,\n      communitySupportNeeded,\n      transitioningFromInstitutionalCare,\n      coordinatedCareNeeded\n    } = answers;\n    let eligiblePrograms = [];\n\n    // Residency check\n    if (residency !== 'Yes') {\n      return ['Ineligible for all listed MassHealth programs and waivers.'];\n    }\n\n    // Income eligibility check\n    const incomeEligible = determineIncomeEligibility();\n    if (!incomeEligible) {\n      return ['May not be eligible for MassHealth Standard or associated waivers due to income limits.'];\n    }\n\n    // MassHealth Standard\n    eligiblePrograms.push('MassHealth Standard');\n\n    // Age-specific programs\n    if (age === 'Under 18') {\n      eligiblePrograms.push(\"Children's MassHealth Standard\");\n    }\n\n    // Dual-eligible programs\n    if (medicareEnrolled === 'Yes') {\n      if (dualEligible === 'Yes') {\n        if (age === '21-64' && esrd === 'No') {\n          eligiblePrograms.push('Integrated Care Options (ICO)');\n          eligiblePrograms.push('One Care Program');\n        }\n        if (age === '65 or older') {\n          eligiblePrograms.push('Senior Care Options (SCO)');\n        }\n      } else {\n        eligiblePrograms.push('Potentially eligible for Medicare Savings Programs');\n      }\n    }\n\n    // Disability programs\n    if (disability === 'Yes') {\n      // May qualify for additional supports under MassHealth Standard\n    }\n\n    // ESRD exclusion\n    if (esrd === 'Yes') {\n      // Not eligible for ICO and One Care Program\n      eligiblePrograms = eligiblePrograms.filter(program => program !== 'Integrated Care Options (ICO)' && program !== 'One Care Program');\n    }\n\n    // ABI/TBI Waivers\n    if (abiOrTbi === 'Yes') {\n      if (nursingFacility === 'Yes') {\n        eligiblePrograms.push('ABI Residential Habilitation (ABI-RH)');\n        eligiblePrograms.push('ABI Non-Residential Habilitation (ABI-N)');\n        eligiblePrograms.push('MFP Residential Supports (MFP-RS)');\n        eligiblePrograms.push('MFP Community Living (MFP-CL)');\n        eligiblePrograms.push('Traumatic Brain Injury (TBI) Waiver');\n      } else if (nursingCareCriteria === 'Yes') {\n        eligiblePrograms.push('Traumatic Brain Injury (TBI) Waiver');\n      }\n    }\n\n    // Frail Elder Waiver\n    if ((age === '60+' || age === '65 or older') && nursingCareCriteria === 'Yes') {\n      eligiblePrograms.push('Frail Elder Waiver (FEW)');\n    }\n\n    // Intellectual Disability\n    if (intellectualDisability === 'Yes' && (age === '22 or older' || age === '65 or older')) {\n      eligiblePrograms.push('Adult Supports Waiver (DDS-AS)');\n    }\n\n    // Need for community support\n    if (communitySupportNeeded === 'Yes') {\n      eligiblePrograms.push('Frail Elder Waiver (FEW)');\n      if (transitioningFromInstitutionalCare === 'Yes') {\n        eligiblePrograms.push('MFP Community Living (MFP-CL)');\n      }\n    }\n\n    // Transitioning from Institutional Care\n    if (transitioningFromInstitutionalCare === 'Yes') {\n      eligiblePrograms.push('MFP Residential Supports (MFP-RS)');\n      eligiblePrograms.push('MFP Community Living (MFP-CL)');\n    }\n\n    // Coordinated Care Needs\n    if (coordinatedCareNeeded === 'Yes') {\n      if (age === '21-64' && dualEligible === 'Yes' && esrd === 'No') {\n        eligiblePrograms.push('Integrated Care Options (ICO)');\n        eligiblePrograms.push('One Care Program');\n      }\n      if ((age === '65 or older' || age === '65+') && dualEligible === 'Yes') {\n        eligiblePrograms.push('Senior Care Options (SCO)');\n      }\n    }\n\n    // Remove duplicates\n    eligiblePrograms = [...new Set(eligiblePrograms)];\n    if (eligiblePrograms.length === 0) {\n      eligiblePrograms.push('Based on your answers, you may need to contact MassHealth for more information.');\n    }\n    return eligiblePrograms;\n  };\n  if (step > questions.length) {\n    const eligiblePrograms = determineEligibility();\n    return /*#__PURE__*/_jsxDEV(Outcome, {\n      programs: eligiblePrograms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = questions[step - 1];\n  return /*#__PURE__*/_jsxDEV(Question, {\n    question: currentQuestion.question,\n    options: currentQuestion.options,\n    onAnswer: value => handleAnswer(currentQuestion.key, value),\n    type: currentQuestion.type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n}\n_s(Assessment, \"DM9+8NpA9ZpKJgmLtmebsquAmoM=\");\n_c = Assessment;\nexport default Assessment;\nvar _c;\n$RefreshReg$(_c, \"Assessment\");","map":{"version":3,"names":["React","useState","Question","Outcome","jsxDEV","_jsxDEV","Assessment","_s","step","setStep","answers","setAnswers","handleAnswer","questionKey","value","prevAnswers","questions","length","prevStep","key","question","options","type","determineIncomeEligibility","householdSize","householdIncome","size","parseInt","income","parseFloat","isNaN","incomeLimits","additionalAmount","limit","determineEligibility","residency","age","medicareEnrolled","dualEligible","esrd","disability","abiOrTbi","nursingFacility","nursingCareCriteria","intellectualDisability","communitySupportNeeded","transitioningFromInstitutionalCare","coordinatedCareNeeded","eligiblePrograms","incomeEligible","push","filter","program","Set","programs","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","onAnswer","_c","$RefreshReg$"],"sources":["/Users/lennartvandersmissen/Documents/masshealth-assessment/frontend/src/Assessment.js"],"sourcesContent":["// src/Assessment.js\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Outcome from './Outcome';\n\nfunction Assessment() {\n  const [step, setStep] = useState(1);\n  const [answers, setAnswers] = useState({});\n\n  const handleAnswer = (questionKey, value) => {\n    setAnswers((prevAnswers) => ({ ...prevAnswers, [questionKey]: value }));\n\n    // Conditional navigation logic\n    if (questionKey === 'residency' && value === 'No') {\n      setStep(questions.length + 1); // Skip to outcome\n      return;\n    }\n\n    if (questionKey === 'age' && value === 'Under 18') {\n      setStep(questions.length + 1); // Skip to outcome\n      return;\n    }\n\n    if (questionKey === 'medicareEnrolled' && value === 'No') {\n      // Skip dual eligibility question\n      setStep((prevStep) => prevStep + 2);\n      return;\n    }\n\n    if (questionKey === 'dualEligible' && value === 'No') {\n      // Skip to disability question\n      setStep((prevStep) => prevStep + 1);\n      return;\n    }\n\n    if (questionKey === 'disability' && value === 'No') {\n      // Skip to ESRD question\n      setStep((prevStep) => prevStep + 1);\n      return;\n    }\n\n    if (questionKey === 'esrd' && value === 'Yes') {\n      // Skip to ABI/TBI question\n      setStep((prevStep) => prevStep + 1);\n      return;\n    }\n\n    if (questionKey === 'abiOrTbi' && value === 'No') {\n      // Skip to intellectual disability question\n      setStep((prevStep) => prevStep + 2);\n      return;\n    }\n\n    if (questionKey === 'nursingFacility' && value === 'No') {\n      // Skip to nursing care criteria question\n      setStep((prevStep) => prevStep + 1);\n      return;\n    }\n\n    if (questionKey === 'intellectualDisability' && value === 'No') {\n      // Skip to community support question\n      setStep((prevStep) => prevStep + 1);\n      return;\n    }\n\n    // Update the step to move to the next question\n    setStep((prevStep) => prevStep + 1);\n  };\n\n  const questions = [\n    // Question 1\n    {\n      key: 'residency',\n      question: 'Do you currently reside in Massachusetts?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    // Question 2\n    {\n      key: 'age',\n      question: 'What is your age?',\n      options: ['Under 18', '18-21', '21-64', '65 or older'],\n      type: 'options',\n    },\n    // Question 3\n    {\n      key: 'householdSize',\n      question: 'How many people are in your household?',\n      type: 'number',\n    },\n    // Question 4\n    {\n      key: 'householdIncome',\n      question: 'What is your total annual household income (before taxes)?',\n      type: 'number',\n    },\n    // Question 5\n    {\n      key: 'medicareEnrolled',\n      question: 'Are you enrolled in Medicare?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    // Question 6\n    {\n      key: 'dualEligible',\n      question:\n        'Are you eligible for both MassHealth Standard and Medicare (dual-eligible)?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    // Question 7\n    {\n      key: 'disability',\n      question: 'Do you have a disability?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    // Question 8\n    {\n      key: 'esrd',\n      question: 'Do you have end-stage renal disease (ESRD)?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    // Question 9\n    {\n      key: 'abiOrTbi',\n      question:\n        'Do you have an acquired brain injury (ABI) or traumatic brain injury (TBI)?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    // Question 10\n    {\n      key: 'nursingFacility',\n      question:\n        'Are you currently residing in a nursing facility or hospital, or have you been in one for at least 90 consecutive days?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    // Question 11\n    {\n      key: 'nursingCareCriteria',\n      question:\n        'Do you meet the criteria for needing nursing facility level of care?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    // Question 12\n    {\n      key: 'intellectualDisability',\n      question:\n        'Do you have an intellectual disability diagnosed by the Department of Developmental Services (DDS)?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    // Question 13\n    {\n      key: 'communitySupportNeeded',\n      question:\n        'Do you require assistance with daily activities to live in the community (e.g., personal care, homemaker services)?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    // Question 14\n    {\n      key: 'transitioningFromInstitutionalCare',\n      question:\n        'Are you planning to transition from a nursing facility or hospital back into the community?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n    // Question 15\n    {\n      key: 'coordinatedCareNeeded',\n      question:\n        'Would you benefit from coordinated health care services, including medical, behavioral health, and long-term services and supports?',\n      options: ['Yes', 'No'],\n      type: 'options',\n    },\n  ];\n\n  const determineIncomeEligibility = () => {\n    const { householdSize, householdIncome } = answers;\n\n    // Convert inputs to numbers\n    const size = parseInt(householdSize, 10);\n    const income = parseFloat(householdIncome);\n\n    if (isNaN(size) || isNaN(income) || size <= 0 || income < 0) {\n      return false;\n    }\n\n    // MassHealth Standard income limits (2023 FPL percentages for illustrative purposes)\n    // Note: Replace these values with the actual income limits from MassHealth\n    const incomeLimits = {\n      1: 18175,\n      2: 24528,\n      3: 30880,\n      4: 37233,\n      5: 43585,\n      6: 49938,\n      7: 56290,\n      8: 62643,\n    };\n\n    // Additional amount per person for households larger than 8\n    const additionalAmount = 6353;\n\n    let limit;\n    if (size <= 8) {\n      limit = incomeLimits[size];\n    } else {\n      limit = incomeLimits[8] + (size - 8) * additionalAmount;\n    }\n\n    return income <= limit;\n  };\n\n  const determineEligibility = () => {\n    const {\n      residency,\n      age,\n      medicareEnrolled,\n      dualEligible,\n      esrd,\n      disability,\n      abiOrTbi,\n      nursingFacility,\n      nursingCareCriteria,\n      intellectualDisability,\n      communitySupportNeeded,\n      transitioningFromInstitutionalCare,\n      coordinatedCareNeeded,\n    } = answers;\n\n    let eligiblePrograms = [];\n\n    // Residency check\n    if (residency !== 'Yes') {\n      return ['Ineligible for all listed MassHealth programs and waivers.'];\n    }\n\n    // Income eligibility check\n    const incomeEligible = determineIncomeEligibility();\n\n    if (!incomeEligible) {\n      return [\n        'May not be eligible for MassHealth Standard or associated waivers due to income limits.',\n      ];\n    }\n\n    // MassHealth Standard\n    eligiblePrograms.push('MassHealth Standard');\n\n    // Age-specific programs\n    if (age === 'Under 18') {\n      eligiblePrograms.push(\"Children's MassHealth Standard\");\n    }\n\n    // Dual-eligible programs\n    if (medicareEnrolled === 'Yes') {\n      if (dualEligible === 'Yes') {\n        if (age === '21-64' && esrd === 'No') {\n          eligiblePrograms.push('Integrated Care Options (ICO)');\n          eligiblePrograms.push('One Care Program');\n        }\n        if (age === '65 or older') {\n          eligiblePrograms.push('Senior Care Options (SCO)');\n        }\n      } else {\n        eligiblePrograms.push('Potentially eligible for Medicare Savings Programs');\n      }\n    }\n\n    // Disability programs\n    if (disability === 'Yes') {\n      // May qualify for additional supports under MassHealth Standard\n    }\n\n    // ESRD exclusion\n    if (esrd === 'Yes') {\n      // Not eligible for ICO and One Care Program\n      eligiblePrograms = eligiblePrograms.filter(\n        (program) =>\n          program !== 'Integrated Care Options (ICO)' && program !== 'One Care Program'\n      );\n    }\n\n    // ABI/TBI Waivers\n    if (abiOrTbi === 'Yes') {\n      if (nursingFacility === 'Yes') {\n        eligiblePrograms.push('ABI Residential Habilitation (ABI-RH)');\n        eligiblePrograms.push('ABI Non-Residential Habilitation (ABI-N)');\n        eligiblePrograms.push('MFP Residential Supports (MFP-RS)');\n        eligiblePrograms.push('MFP Community Living (MFP-CL)');\n        eligiblePrograms.push('Traumatic Brain Injury (TBI) Waiver');\n      } else if (nursingCareCriteria === 'Yes') {\n        eligiblePrograms.push('Traumatic Brain Injury (TBI) Waiver');\n      }\n    }\n\n    // Frail Elder Waiver\n    if (\n      (age === '60+' || age === '65 or older') &&\n      nursingCareCriteria === 'Yes'\n    ) {\n      eligiblePrograms.push('Frail Elder Waiver (FEW)');\n    }\n\n    // Intellectual Disability\n    if (\n      intellectualDisability === 'Yes' &&\n      (age === '22 or older' || age === '65 or older')\n    ) {\n      eligiblePrograms.push('Adult Supports Waiver (DDS-AS)');\n    }\n\n    // Need for community support\n    if (communitySupportNeeded === 'Yes') {\n      eligiblePrograms.push('Frail Elder Waiver (FEW)');\n      if (transitioningFromInstitutionalCare === 'Yes') {\n        eligiblePrograms.push('MFP Community Living (MFP-CL)');\n      }\n    }\n\n    // Transitioning from Institutional Care\n    if (transitioningFromInstitutionalCare === 'Yes') {\n      eligiblePrograms.push('MFP Residential Supports (MFP-RS)');\n      eligiblePrograms.push('MFP Community Living (MFP-CL)');\n    }\n\n    // Coordinated Care Needs\n    if (coordinatedCareNeeded === 'Yes') {\n      if (age === '21-64' && dualEligible === 'Yes' && esrd === 'No') {\n        eligiblePrograms.push('Integrated Care Options (ICO)');\n        eligiblePrograms.push('One Care Program');\n      }\n      if ((age === '65 or older' || age === '65+') && dualEligible === 'Yes') {\n        eligiblePrograms.push('Senior Care Options (SCO)');\n      }\n    }\n\n    // Remove duplicates\n    eligiblePrograms = [...new Set(eligiblePrograms)];\n\n    if (eligiblePrograms.length === 0) {\n      eligiblePrograms.push(\n        'Based on your answers, you may need to contact MassHealth for more information.'\n      );\n    }\n\n    return eligiblePrograms;\n  };\n\n  if (step > questions.length) {\n    const eligiblePrograms = determineEligibility();\n    return <Outcome programs={eligiblePrograms} />;\n  }\n\n  const currentQuestion = questions[step - 1];\n\n  return (\n    <Question\n      question={currentQuestion.question}\n      options={currentQuestion.options}\n      onAnswer={(value) => handleAnswer(currentQuestion.key, value)}\n      type={currentQuestion.type}\n    />\n  );\n}\n\nexport default Assessment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}